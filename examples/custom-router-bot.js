/**
 * custom-router-bot
 */
const Telegraf = require('telegraf')
const { Router, Extra, memorySession } = require('telegraf')

module.exports = () => {
  //—Å–æ–∑–¥–∞—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Å–µ–º—å—é –∫–Ω–æ–ø–∫–∞–º–∏, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã–º–∏ –≤ —Ç—Ä–∏ —Å—Ç–æ–ª–±—Ü–∞
  const defaultMarkup = Extra
    .HTML()
    .markup((m) => m.inlineKeyboard([
      m.callbackButton('Add 1', 'add:1'),
      m.callbackButton('Add 10', 'add:10'),
      m.callbackButton('Add 100', 'add:100'),
      m.callbackButton('Subtract 1', 'sub:1'),
      m.callbackButton('Subtract 10', 'sub:10'),
      m.callbackButton('Subtract 100', 'sub:100'),
      m.callbackButton('Clear', 'clear')
    ], {columns: 3}))

  //—Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Router
  //ctx.callbackQuery.data –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è: add:1, add:10, add:100,
  //sub:1, sub:10, clear
  const simpleRouter = new Router((ctx) => {
    console.log(ctx.callbackQuery)
    if (!ctx.callbackQuery.data) {
      return Promise.resolve()
    }
    const parts = ctx.callbackQuery.data.split(':')
    return Promise.resolve({
      route: parts[0],
      state: {
        amount: parseInt(parts[1], 10) || 0
      }
    })
  })

  const bot = new Telegraf(process.env.BOT_TOKEN)

  //–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–∞ –¥–ª—è —Å–µ—Å—Å–∏–π
  bot.use(memorySession())

  //–ø–æ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
  //–≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ middleware –∫–ª–∞—Å—Å–∞ Router
  bot.on('callback_query', simpleRouter.middleware())

  //–ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã start
  //—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ value —Ä–∞–≤–Ω—ã–º 0,
  //–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º value,
  //–æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
  bot.command('start', (ctx) => {
    ctx.session.value = 0
    return ctx.reply(`Value: <b>${ctx.session.value}</b>`, defaultMarkup)
  })

  //–ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã add
  //–∫ –∑–Ω–∞—á–µ–Ω–∏—é –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ value –ø—Ä–∏–±–∞–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å–æ—Å—Ç–æ—è–Ω–∏—è amount,
  //–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
  simpleRouter.on('add', (ctx) => {
    ctx.session.value = (ctx.session.value || 0) + ctx.state.amount
    return editText(ctx)
  })

  //–ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã sub
  //–∏–∑ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ value –≤—ã—á–µ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å–æ—Å—Ç–æ—è–Ω–∏—è amount,
  //–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
  simpleRouter.on('sub', (ctx) => {
    ctx.session.value = (ctx.session.value || 0) - ctx.state.amount
    return editText(ctx)
  })

  //–ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã clear
  //–æ–±–Ω—É–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ value,
  //–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
  simpleRouter.on('clear', (ctx) => {
    ctx.session.value = 0
    return editText(ctx)
  })

  bot.startPolling()

  function editText (ctx) {
    return ctx.session.value !== 42
      //–µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ value –Ω–µ —Ä–∞–≤–Ω–æ 42, —Ç–æ
      //–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∑–∞–º–µ–Ω–∏–≤ –≤ –Ω–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ value
      //–∏ –¥–æ–±–∞–≤–∏–≤ –∫ –Ω–µ–º—É –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
      ? ctx.editMessageText(`Value: <b>${ctx.session.value}</b>`, defaultMarkup).catch(() => undefined)
      //–µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ value —Ä–∞–≤–Ω–æ 42, —Ç–æ
      //–≤—ã–≤–µ—Å—Ç–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ —Å–º–∞–π–ª–∏–∫–æ–º, –∞ –∑–∞—Ç–µ–º –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –û–ö
      //–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∑–∞–º–µ–Ω–∏–≤ –µ–≥–æ —Å–º–∞–π–ª–∏–∫–æ–º –∏ —É–¥–∞–ª–∏–≤ –∏–∑ –Ω–µ–≥–æ
      //–≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
      : ctx.answerCallbackQuery('üéâ', undefined, true).then(() => ctx.editMessageText(`üéâ ${ctx.session.value} üéâ`))
  }
}
